apiVersion: v1
kind: DeploymentConfig
metadata:
  name: kibana
  namespace: kibana-finance
  labels:
    app: kibana
    project: finance
spec:
  replicas: 2
  template:
    metadata:
      labels:
        name: kibana-finance
    spec:
      serviceAccountName: "kibana"
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:6.2.2
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 1Gi
          securityContext:
            privileged: true
          env:
            - name: "ELASTICSEARCH_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "kibana"
                  key: "ELASTICSEARCH_PASSWORD"
            - name: "XPACK_MONITORING_ELASTICSEARCH_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "kibana"
                  key: "XPACK_MONITORING_ELASTICSEARCH_PASSWORD"
            - name: "XPACK_SECURITY_ENCRYPTIONKEY"
              valueFrom:
                secretKeyRef:
                  name: "kibana"
                  key: "XPACK_SECURITY_ENCRYPTIONKEY"
            - name: "XPACK_REPORTING_ENCRYPTIONKEY"
              valueFrom:
                secretKeyRef:
                  name: "kibana"
                  key: "XPACK_REPORTING_ENCRYPTIONKEY"
          ports:
          - containerPort: 5601
            name: ui
            protocol: TCP
          volumeMounts:
          - name: config-kibana
            mountPath: /usr/share/kibana/ssl/elasticsearch_ca.crt
            subPath: elasticsearch_ca.crt
            readOnly: true
          - name: config-kibana
            mountPath: /usr/share/kibana/config/kibana.yml
            subPath: kibana.yml
            readOnly: true
          readinessProbe:
            tcpSocket:
              port: ui
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 30
            failureThreshold: 15
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - curl -s -k -u kibanatester:kibanatester localhost:5601/api/status | python -c 'import json,sys; obj=json.load(sys.stdin); print obj["status"]["overall"]["state"]' | grep -o -i green
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
        - name: nginx
          image: registry.hub.docker.com/library/nginx:1.14.2
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            privileged: true
          ports:
          - containerPort: 80
            name: rev-proxy
            protocol: TCP
          volumeMounts:
          - name: secrets-nginx
            mountPath: /etc/nginx/secrets/
            readOnly: true
          - name: config-nginx
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: kibana.conf
            readOnly: true
          - name: config-nginx
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
        - name: haproxy
          image: registry.hub.docker.com/library/haproxy:1.8.14
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            privileged: true
          ports:
          - containerPort: 9200
            name: elasticsearch
            protocol: TCP
          volumeMounts:
          - name: config-haproxy
            mountPath: /usr/local/etc/haproxy/haproxy.cfg
            subPath: haproxy.cfg
            readOnly: true
          livenessProbe:
            tcpSocket:
              port: 9200
            initialDelaySeconds: 10
            periodSeconds: 60
            timeoutSeconds: 60
      volumes:
      - name: secrets-nginx
        secret:
          secretName: nginx
      - name: config-nginx
        configMap:
          name: nginx
      - name: config-kibana
        configMap:
          name: kibana
      - name: config-haproxy
        configMap:
          name: haproxy
