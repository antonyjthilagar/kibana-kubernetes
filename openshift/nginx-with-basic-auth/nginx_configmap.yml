kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx
  namespace: kibana
data:
  nginx.conf: |-
    user nginx;
    worker_processes 1;
                                                                                                                                                                                                                                                        
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {  
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        log_format json_combined escape=json '{ "timestamp": "$time_iso8601", '
            '"host": "$host", '
            '"http_x_forwarded_for": "$http_x_forwarded_for", '
            '"remote_addr": "$remote_addr", '
            '"remote_user": "$remote_user", '
            '"remote_method": "$request_method", '
            '"request_uri": "$request_uri", '
            '"request_length": $request_length, '
            '"request_time": $request_time, '
            '"status": $status, '
            '"bytes_sent": $bytes_sent, '
            '"body_bytes_sent": $body_bytes_sent, '
            '"connection": "$connection", '
            '"connection_requests": $connection_requests, '
            '"http_referrer": "$http_referer", '
            '"http_user_agent": "$http_user_agent" }';
            
        access_log  /var/log/nginx/access.log  json_combined;
        error_log   /var/log/nginx/error.log  warn;
        sendfile        on;
        #tcp_nopush     on;
        keepalive_timeout  65;
        #gzip  on;
        include /etc/nginx/conf.d/*.conf;
    }   
  kibana.conf: |-
    server {
        listen 80;
        server_name kibana-finance.app.oscp-prod.mercedes-benz.com;        
        # Secure settings see https://cipherli.st/
        server_tokens off;
        # Only for client certificate authentication (including self signed cert)
        #ssl on;
        #ssl_protocols TLSv1.2;
        #ssl_prefer_server_ciphers on;
        #ssl_ecdh_curve secp384r1;
        #ssl_session_cache shared:SSL:10m;
        #ssl_session_tickets off;
        # Enable in prod environment if proper certificate is available:
        #ssl_stapling on;
        #ssl_stapling_verify on;
        #resolver_timeout 5s;
        #ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        #ssl_client_certificate /etc/nginx/secrets/ca.crt;
        #ssl_verify_client on; 
        #ssl_crl /etc/nginx/secrets/ca.crl;
        #ssl_certificate /etc/nginx/secrets/pub.crt;
        #ssl_certificate_key /etc/nginx/secrets/priv.key;
        #ssl_dhparam /etc/nginx/secrets/dhparams.pem;
        #add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        location / {
          #auth_basic "Enter authentication credentials";
          #auth_basic_user_file /etc/nginx/secrets/htpasswd;            
          proxy_pass http://localhost:5601/;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_set_header Connection "Keep-Alive";
          proxy_set_header Proxy-Connection "Keep-Alive"; 
          proxy_set_header Authorization "";
        }    
    }
